//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_WebService.ServiceReferenceUserAccount {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceUserAccount.IUpdateAmountService")]
    public interface IUpdateAmountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/UpdateAmountViaUsername", ReplyAction="http://tempuri.org/IUpdateAmountService/UpdateAmountViaUsernameResponse")]
        void UpdateAmountViaUsername(string username, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/UpdateAmountViaUsername", ReplyAction="http://tempuri.org/IUpdateAmountService/UpdateAmountViaUsernameResponse")]
        System.Threading.Tasks.Task UpdateAmountViaUsernameAsync(string username, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/UpdateAmountViaId", ReplyAction="http://tempuri.org/IUpdateAmountService/UpdateAmountViaIdResponse")]
        void UpdateAmountViaId(int id, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/UpdateAmountViaId", ReplyAction="http://tempuri.org/IUpdateAmountService/UpdateAmountViaIdResponse")]
        System.Threading.Tasks.Task UpdateAmountViaIdAsync(int id, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/GetAllUsers", ReplyAction="http://tempuri.org/IUpdateAmountService/GetAllUsersResponse")]
        DTO.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/GetAllUsers", ReplyAction="http://tempuri.org/IUpdateAmountService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<DTO.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/ConnectWithUsername", ReplyAction="http://tempuri.org/IUpdateAmountService/ConnectWithUsernameResponse")]
        DTO.User ConnectWithUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/ConnectWithUsername", ReplyAction="http://tempuri.org/IUpdateAmountService/ConnectWithUsernameResponse")]
        System.Threading.Tasks.Task<DTO.User> ConnectWithUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/ConnectWithId", ReplyAction="http://tempuri.org/IUpdateAmountService/ConnectWithIdResponse")]
        DTO.User ConnectWithId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateAmountService/ConnectWithId", ReplyAction="http://tempuri.org/IUpdateAmountService/ConnectWithIdResponse")]
        System.Threading.Tasks.Task<DTO.User> ConnectWithIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUpdateAmountServiceChannel : Project_WebService.ServiceReferenceUserAccount.IUpdateAmountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAmountServiceClient : System.ServiceModel.ClientBase<Project_WebService.ServiceReferenceUserAccount.IUpdateAmountService>, Project_WebService.ServiceReferenceUserAccount.IUpdateAmountService {
        
        public UpdateAmountServiceClient() {
        }
        
        public UpdateAmountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpdateAmountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateAmountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateAmountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpdateAmountViaUsername(string username, double amount) {
            base.Channel.UpdateAmountViaUsername(username, amount);
        }
        
        public System.Threading.Tasks.Task UpdateAmountViaUsernameAsync(string username, double amount) {
            return base.Channel.UpdateAmountViaUsernameAsync(username, amount);
        }
        
        public void UpdateAmountViaId(int id, double amount) {
            base.Channel.UpdateAmountViaId(id, amount);
        }
        
        public System.Threading.Tasks.Task UpdateAmountViaIdAsync(int id, double amount) {
            return base.Channel.UpdateAmountViaIdAsync(id, amount);
        }
        
        public DTO.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<DTO.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public DTO.User ConnectWithUsername(string username) {
            return base.Channel.ConnectWithUsername(username);
        }
        
        public System.Threading.Tasks.Task<DTO.User> ConnectWithUsernameAsync(string username) {
            return base.Channel.ConnectWithUsernameAsync(username);
        }
        
        public DTO.User ConnectWithId(int id) {
            return base.Channel.ConnectWithId(id);
        }
        
        public System.Threading.Tasks.Task<DTO.User> ConnectWithIdAsync(int id) {
            return base.Channel.ConnectWithIdAsync(id);
        }
    }
}
